put:
  summary: Update user
  description: Updates a user.
  operationId: updateUser
  tags:
    - users
  security:
    - bearerAuth: []
  parameters:
    - $ref: '../../parameter/UserId.yaml'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../../schema/User.yaml' # TODO: replace with DTO without userId
  responses:
    200:
      description: Successfully updated user.
      content:
        application/json:
          schema:
            $ref: '../../schema/User.yaml'
    400:
      $ref: '../../response/400InvalidOrMissingParams.yaml'
    401:
      $ref: '../../response/401Unathorized.yaml'
    404:
      $ref: '../../response/404UserNotFound.yaml'
    409:
      $ref: '../../response/409EmailAlreadyExists.yaml'
    415:
      $ref: '../../response/415RequestWithoutData.yaml'

delete:
  summary: Delete user
  description: Deletes a user.
  operationId: deleteUser
  security:
    - bearerAuth: []
  tags:
    - users
  parameters:
    - $ref: '../../parameter/UserId.yaml'
  responses:
    204:
      description: Successfully deleted user.
    400:
      $ref: '../../response/400InvalidOrMissingParams.yaml'
    401:
      $ref: '../../response/401Unathorized.yaml'
    404:
      $ref: '../../response/404UserNotFound.yaml'
    500:
      description: Error occurred when removing user documents.
      content:
        application/json:
          schema:
            $ref: '../../schema/ClientError.yaml'